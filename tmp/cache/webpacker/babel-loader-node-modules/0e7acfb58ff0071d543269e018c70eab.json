{"ast":null,"code":"import consumer from \"./consumer\";\ndocument.addEventListener('turbolinks:load', function () {\n  var room_element = document.getElementById('room-id');\n  var room_id = room_element.getAttribute('data-room-id');\n  console.log(consumer.subscriptions);\n  consumer.subscriptions.subscriptions.forEach(function (subscription) {\n    consumer.subscriptions.remove(subscription);\n  });\n  consumer.subscriptions.create({\n    channel: \"RoomChannel\",\n    room_id: 1\n  }, {\n    connected: function connected() {\n      console.log(\"connected to....\"); // Called when the subscription is ready for use on the server\n    },\n    disconnected: function disconnected() {// Called when the subscription has been terminated by the server\n    },\n    received: function received(data) {// const user_element = document.getElementById('user-id');\n      // const user_id = Number(user_element.getAttribute('data-user-id'));\n      // let html;\n      // if (user_id === data.message.user_id) {\n      //   html = data.mine\n      // } else {\n      //   html = data.theirs\n      // }\n      // const messageContainer = document.getElementById('messages')\n      // messageContainer.innerHTML = messageContainer.innerHTML + html\n    }\n  });\n});","map":{"version":3,"sources":["/home/yanthraa/messenger-app/app/javascript/channels/room_channel.js"],"names":["consumer","document","addEventListener","room_element","getElementById","room_id","getAttribute","console","log","subscriptions","forEach","subscription","remove","create","channel","connected","disconnected","received","data"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEAC,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,EAA6C,YAAM;AACjD,MAAMC,YAAY,GAAGF,QAAQ,CAACG,cAAT,CAAwB,SAAxB,CAArB;AACA,MAAMC,OAAO,GAAGF,YAAY,CAACG,YAAb,CAA0B,cAA1B,CAAhB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACS,aAArB;AAEAT,EAAAA,QAAQ,CAACS,aAAT,CAAuBA,aAAvB,CAAqCC,OAArC,CAA6C,UAACC,YAAD,EAAkB;AAC7DX,IAAAA,QAAQ,CAACS,aAAT,CAAuBG,MAAvB,CAA8BD,YAA9B;AACD,GAFD;AAIAX,EAAAA,QAAQ,CAACS,aAAT,CAAuBI,MAAvB,CAA8B;AAAEC,IAAAA,OAAO,EAAE,aAAX;AAA0BT,IAAAA,OAAO,EAAE;AAAnC,GAA9B,EAAsE;AACpEU,IAAAA,SADoE,uBACxD;AACVR,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EADU,CAEV;AACD,KAJmE;AAMpEQ,IAAAA,YANoE,0BAMrD,CACb;AACD,KARmE;AAUpEC,IAAAA,QAVoE,oBAU3DC,IAV2D,EAUrD,CACb;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACD;AAxBmE,GAAtE;AA0BD,CApCD","sourcesContent":["import consumer from \"./consumer\"\n\ndocument.addEventListener('turbolinks:load', () => {\n  const room_element = document.getElementById('room-id');\n  const room_id = room_element.getAttribute('data-room-id');\n\n  console.log(consumer.subscriptions)\n\n  consumer.subscriptions.subscriptions.forEach((subscription) => {\n    consumer.subscriptions.remove(subscription)\n  })\n\n  consumer.subscriptions.create({ channel: \"RoomChannel\", room_id: 1 }, {\n    connected() {\n      console.log(\"connected to....\")\n      // Called when the subscription is ready for use on the server\n    },\n\n    disconnected() {\n      // Called when the subscription has been terminated by the server\n    },\n\n    received(data) {\n      // const user_element = document.getElementById('user-id');\n      // const user_id = Number(user_element.getAttribute('data-user-id'));\n\n      // let html;\n\n      // if (user_id === data.message.user_id) {\n      //   html = data.mine\n      // } else {\n      //   html = data.theirs\n      // }\n\n      // const messageContainer = document.getElementById('messages')\n      // messageContainer.innerHTML = messageContainer.innerHTML + html\n    }\n  });\n})\n"]},"metadata":{},"sourceType":"module"}